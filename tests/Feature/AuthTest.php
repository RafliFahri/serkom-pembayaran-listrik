<?php

namespace Tests\Feature;

use App\Models\Pelanggan;
use App\Models\User;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class AuthTest extends TestCase
{
    protected $user;
    protected $pelanggan;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::where('username', 'admin')->where('password', 'admin')->first();
        $this->pelanggan = Pelanggan::where('username', 'pelanggan')->where('password', 'pelanggan')->first();
    }

    public function test_unathorized_cant_access_pelanggan_dashboard(): void
    {
        $response = $this->get('/dashboard');
        $response->assertStatus(302);
        $response->assertRedirect('/login');
    }
    public function test_unathorized_cant_access_admin_dashboard(): void
    {
        $response = $this->get('/admin/dashboard');
        $response->assertStatus(302);
        $response->assertRedirect('admin/login');
    }
    public function test_pelanggan_can_login_redirect_to_dashboard(): void
    {
        $pel = Pelanggan::factory()->create([]);
        $response = $this->post('/login', ['username' => $pel->username, 'password' => $pel->password]);
        $response->assertStatus(302);
        $response->assertRedirect('/penggunaan');
    }
    public function test_pelanggan_can_access_dashboard(): void
    {
//        $user = Pelanggan::factory()->create();
        $response = $this->actingAs($this->pelanggan, 'customer')->get('/dashboard');
        $response->assertStatus(200);
    }
    public function test_pelanggan_cant_access_admin_dashboard(): void
    {
//        $user = Pelanggan::factory()->create();
        $response = $this->actingAs($this->pelanggan, 'customer')->get('/admin/dashboard');
        $response->assertStatus(302);
        $response->assertRedirect('/dashboard');
    }
    public function test_pelanggan_can_logout(): void
    {
//        $user = Pelanggan::factory()->create([]);
        $response = $this->actingAs($this->pelanggan, 'customer')->post('/logout');
        $response->assertStatus(302);
        $response->assertRedirect('/login');
    }
    public function test_admin_can_login_redirect_to_dashboard(): void
    {
//        $admin = User::factory()->create();
        $response = $this->post('admin/login', [
            'username'=>$admin->username,
            'password'=>$admin->password
        ]);
        $response->assertStatus(302);
        $response->assertRedirect('admin/dashboard');
    }
    public function test_admin_can_access_dashboard(): void
    {
        $admin = User::factory()->create([]);
        $response = $this->actingAs($admin, 'admin')->get('/admin/dashboard');
        $response->assertStatus(200);
    }
    public function test_admin_cant_access_pelanggan_dashboard(): void
    {
        $admin = User::factory()->create([]);
        $response = $this->actingAs($admin, 'admin')->get('/dashboard');
        $response->assertStatus(302);
        $response->assertRedirect('/admin/dashboard');
    }
    public function test_admin_can_logout(): void
    {
        $admin = User::factory()->create();
        $response = $this->actingAs($admin, 'admin')->post('admin/logout');
        $response->assertStatus(302)->assertRedirect('/login');
    }

//    protected function tearDown(): void
//    {
//        parent::tearDown(); // TODO: Change the autogenerated stub
//        DB::rollBack();
//    }
}

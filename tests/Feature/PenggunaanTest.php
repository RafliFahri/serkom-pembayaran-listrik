<?php

namespace Tests\Feature;

use App\Models\Pelanggan;
use App\Models\Penggunaan;
use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class PenggunaanTest extends TestCase
{
    protected $user;
    protected $pelanggan;
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = User::where('username', 'admin')->where('password', 'admin')->first();
        $this->pelanggan = Pelanggan::where('username', 'pelanggan')->where('password', 'pelanggan')->first();
    }
    public function test_admin_tambah_penggunaan_pelanggan(): void
    {
        $response = $this->post('/admin/penggunaan', [
            'id_pelanggan' => $this->pelanggan->id_pelanggan, 'bulan' => 6, 'tahun' => 2024, 'meter_awal' => 1320, 'meter_akhir' => 1650
        ]);
        $response->assertStatus(302);
    }

    public function test_admin_can_see_data_penggunaan_pelanggan(): void
    {
        $response = $this->actingAs($this->user, 'admin')->get('/admin/penggunaan/detail_penggunaan/'.$this->pelanggan->id_pelanggan );
        $response->assertStatus(200)->assertSee('Detail Penggunaan');
    }
    public function test_admin_can_create_penggunaan_pelanggan(): void
    {
        $response = $this->actingAs($this->user, 'admin')->post('/admin/penggunaan', [
            'id_pelanggan' => $this->pelanggan->id_pelanggan,
            'bulan' => 6,
            'tahun' => 2023,
            'meter_awal' => 1320,
            'meter_akhir' => 1650
        ]);
        $response->assertStatus(302)->assertRedirect('/admin/penggunaan/');
        $this->assertDatabaseHas('penggunaan', ['id_pelanggan' => $this->pelanggan->id_pelanggan,
            'bulan' => 6, 'tahun' => 2023, 'meter_awal' => 1320, 'meter_akhir' => 1650]);
    }
    public function test_admin_can_update_penggunaan_pelanggan(): void
    {
        $id_penggunaan = Penggunaan::where('id_pelanggan', '=', $this->pelanggan->id_pelanggan,)->where('bulan', '=', 6)->where('tahun', '=', 2023)->where('meter_awal', '=', 1320)->where('meter_akhir', '=', 1650)->first();
        $response = $this->actingAs($this->user, 'admin')->patch('/admin/penggunaan/detail_penggunaan/'.$id_penggunaan->id_penggunaan, [
            'bulan' => 7, 'tahun' => 2024, 'meter_awal' => 1400, 'meter_akhir' => 1650
        ]);
        $response->assertStatus(302)->assertRedirect('/admin/penggunaan/');
        $this->assertDatabaseHas('penggunaan', ['id_pelanggan' => $this->pelanggan->id_pelanggan, 'bulan' => 7, 'tahun' => 2024, 'meter_awal' => 1400, 'meter_akhir' => 1650]);
    }
    public function test_admin_can_delete_penggunaan_pelanggan(): void
    {
        $id_penggunaan = Penggunaan::where('id_pelanggan', '=', $this->pelanggan->id_pelanggan,)->where('bulan', '=', 7)->where('tahun', '=', 2024)->where('meter_awal', '>=', 1400)->where('meter_akhir', '<=', 1650)->first();
        $response = $this->actingAs($this->user, 'admin')->delete('admin/penggunaan/detail_penggunaan/'.$id_penggunaan->id_penggunaan);
        $response->assertStatus(302);
        $this->assertDatabaseMissing('penggunaan', ['id_pelanggan' => $this->pelanggan->id_pelanggan, 'bulan' => 7, 'tahun' => 2024, 'meter_awal' => 1400, 'meter_akhir' => 1650]);
    }
}
